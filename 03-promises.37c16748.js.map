{"mappings":"YAIA,SAASA,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,QAAQC,IAAIJ,GAEZK,aAAY,WACNL,EAEFF,EAAQ,CAAEH,WAAUC,UAGpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,GAEHO,QAAQC,IAAIE,Q,IAnBHC,SAASC,cAAc,SAE/BC,iBAAiB,UAqBtB,SAAyBC,GACvBA,EAAIC,iBAQJ,IANA,IAAgCC,EAAAF,EAAIG,cAAcC,SAA1CC,EAAwBH,EAAxBhB,MAAOoB,EAAiBJ,EAAjBI,KAAMC,EAAWL,EAAXK,OAEjBC,EAAaC,OAAOJ,EAAMK,OAC1BC,EAAYF,OAAOH,EAAKI,OACxBE,EAAcH,OAAOF,EAAOG,OAEvBG,EAAI,EAAGA,EAAID,EAAaC,IAG/B7B,EAAc6B,EAFdL,GAAcG,GAGXG,MAAK,SAAAC,G,IAAG9B,EAAQ8B,EAAR9B,SAAUC,EAAK6B,EAAL7B,MACjBO,QAAQC,IAAI,uBAAwCsB,OAAf/B,EAAS,QAAY+B,OAAN9B,EAAM,M,IAE3D+B,OAAM,SAAAF,G,IAAG9B,EAAQ8B,EAAR9B,SAAUC,EAAK6B,EAAL7B,MAClBO,QAAQC,IAAI,sBAAqCsB,OAAf/B,EAAS,QAAY+B,OAAN9B,EAAM,M,IAE3DgC,EAAEf,cAAcgB,O","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector('.form');\n\nform.addEventListener('submit', onPromiseCreate);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    console.log(shouldResolve);\n\n    setInterval(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n\n    console.log(promise);\n  });\n}\n\nfunction onPromiseCreate(evt) {\n  evt.preventDefault();\n\n  const { delay, step, amount } = evt.currentTarget.elements;\n\n  let inputDelay = Number(delay.value);\n  let inputStep = Number(step.value);\n  let inputAmount = Number(amount.value);\n\n  for (let i = 0; i < inputAmount; i++) {\n    inputDelay += inputStep;\n\n    createPromise(i, inputDelay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    e.currentTarget.reset();\n  }\n}\n"],"names":["$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","console","log","setInterval","promise","document","querySelector","addEventListener","evt","preventDefault","_elements","currentTarget","elements","delay1","step","amount","inputDelay","Number","value","inputStep","inputAmount","i","then","param","concat","catch","e","reset"],"version":3,"file":"03-promises.37c16748.js.map"}