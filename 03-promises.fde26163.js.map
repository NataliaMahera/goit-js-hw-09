{"mappings":"AAIA,SAASA,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,QAAQC,IAAIJ,GAEZK,aAAY,KACNL,EAEFF,EAAQ,C,SAAEH,E,MAAUC,IAGpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,GAEHO,QAAQC,IAAIE,QAAQ,G,CAnBXC,SAASC,cAAc,SAE/BC,iBAAiB,UAqBtB,SAAyBC,GACvBA,EAAIC,iBAEJ,MAAQf,MAAAgB,EAAKC,KAAEA,EAAIC,OAAEA,GAAWJ,EAAIK,cAAcC,SAElD,IAAIC,EAAaC,OAAON,EAAMO,OAC1BC,EAAYF,OAAOL,EAAKM,OACxBE,EAAcH,OAAOJ,EAAOK,OAEhC,IAAK,IAAIG,EAAI,EAAGA,EAAID,EAAaC,IAC/BL,GAAcG,EAEd1B,EAAc4B,EAAGL,GACdM,MAAK,EAAC5B,SAAEA,EAAQC,MAAEA,MACjBO,QAAQC,IAAI,uBAAqBT,QAAiBC,MAAU,IAE7D4B,OAAM,EAAC7B,SAAEA,EAAQC,MAAEA,MAClBO,QAAQC,IAAI,sBAAoBT,QAAeC,MAAU,IAE7D6B,EAAEV,cAAcW,O","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector('.form');\n\nform.addEventListener('submit', onPromiseCreate);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    console.log(shouldResolve);\n\n    setInterval(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n\n    console.log(promise);\n  });\n}\n\nfunction onPromiseCreate(evt) {\n  evt.preventDefault();\n\n  const { delay, step, amount } = evt.currentTarget.elements;\n\n  let inputDelay = Number(delay.value);\n  let inputStep = Number(step.value);\n  let inputAmount = Number(amount.value);\n\n  for (let i = 0; i < inputAmount; i++) {\n    inputDelay += inputStep;\n\n    createPromise(i, inputDelay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    e.currentTarget.reset();\n  }\n}\n"],"names":["$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","console","log","setInterval","promise","document","querySelector","addEventListener","evt","preventDefault","delay1","step","amount","currentTarget","elements","inputDelay","Number","value","inputStep","inputAmount","i","then","catch","e","reset"],"version":3,"file":"03-promises.fde26163.js.map"}